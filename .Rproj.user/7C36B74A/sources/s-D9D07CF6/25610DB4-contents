install.packages("tidyverse")
library(readr)
library(tidyverse)
library(lubridate)
library(readxl)

PatientInfo <- read_csv("Downloads/coronavirusdataset/PatientInfo.csv", 
                        col_types = cols(sex = col_factor(levels = c("male", 
                        "female", "NA")), state = col_factor(levels = c("released", 
                        "NA", "isolated")), age = col_factor(levels = c("0s", 
                        "10s", "20s", "30s", "40s", "50s", 
                        "60s", "70s", "80s", "90s", "NA"))))

Case <- read_csv("Downloads/coronavirusdataset/Case.csv")
confirmed <- readRDS("~/Downloads/confirmed.rds")


covid_19 <- read_excel("Downloads/COVID-19-geographic-disbtribution-worldwide.xlsx")
View(covid_19)
View(PatientInfo)


require(dplyr)

PatientInfo <-  PatientInfo %>% mutate(recuperado=case_when(
  is.na(state) ~ 0,
  state == "released" ~ 1,
  state == "isolated"~ 0
))

#total_de_pacientes_na_por_sexo_idade <- PatientInfo %>% filter( state == "NA") %>% group_by(sex, age)%>%summarise(count_na = n())
#total_de_pacientes_recuperados_por_sexo_idade <- PatientInfo %>% filter( state == "released") %>% group_by(sex, age)%>%summarise(count_released = n())
#total_de_pacientes_isolados_por_sexo_idade <- PatientInfo %>% filter( state == "isolated") %>% group_by(sex, age)%>%summarise(count_isolated = n())


#df_union1 <- full_join(total_de_pacientes_na_por_sexo_idade, total_de_pacientes_recuperados_por_sexo_idade) %>% full_join(total_de_pacientes_isolados_por_sexo_idade)
#df_union1 <- df_union1 %>% mutate(count_na = ifelse(is.na(count_na), 0, count_na), count_released = ifelse(is.na(count_released),0,count_released))
#head(df_union1)

#plot(df_union1$count_isolated, df_union1$count_released, type = "bar")

#cor(df_union1$count_isolated, df_union1$count_released)
#summarise(df_union1, count(df_union1$count_released))
#table(df_union1)
#tbl(df_union1)
#box_plot_df_union1 <- boxplot(df_union1$count_isolated)
#summary(box_plot_df_union1)
#box_plot_df_union1

#PatientInfo <-  PatientInfo %>% mutate(recuperado=case_when(
#       is.na(state) ~ 0,
#       state == "released" ~ 1,
#       state == "isolated"~ 0
#   ))

#pacientes_agrupados_por_sexo_e_idade <- PatientInfo %>% 
#  filter((!is.na(sex) & !is.na(age))) %>% group_by(sex, age, recuperado)%>%
#  summarise(count = n())
#boxplot(pacientes_agrupados_por_sexo_e_idade$age)
#pacientes_agrupados_por_sexo <- PatientInfo %>% 
#  filter((!is.na(sex) & !is.na(age))) %>% group_by(sex, recuperado)%>%
#  summarise(count = n())

#boxplot(Case$confirmed)
#summary(boxplot(Case$confirmed))

PatientInfoSemNa <- PatientInfo %>% filter(!is.na(sex))
frequencia_absoluta_de_casos_por_sexo = table(PatientInfoSemNa$sex)
frequencia_absoluta_de_casos_por_idade <- table(PatientInfoSemNa$age)

prop.table(frequencia_absoluta_de_casos_por_sexo)
frequencia_relativa_por_idade <- prop.table(frequencia_absoluta_de_casos_por_idade)
frequencia_relativa_por_sexo <- prop.table(frequencia_absoluta_de_casos_por_sexo)
frequencia_relativa_por_situacao <- prop.table(table(PatientInfoSemNa$state))
help(table)

plot(frequencia_relativa_por_idade, main = "Frequencia relativa por idade das vitimas",
     xlab = "Faixa de idade", ylab = "frequencia relativa")

plot(frequencia_relativa_por_situacao, main = "Frequencia relativa por idade das vitimas",
     xlab = "Faixa de idade", ylab = "frequencia relativa")

str(PatientInfoSemNa)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
idade_feminina <- PatientInfoSemNa %>% filter(sex=="female")
idade_de_homens <- PatientInfoSemNa %>% filter(sex=="male")
plot(prop.table(table(idade_feminina$age)), main="Frequencia relativa por idade", ylab = "fequencia", xlab = "Faixa de idade das mulhes")
plot(prop.table(table(idade_de_homens$age)), main= "Frequencia relativa idade", ylab = "fequencia", xlab = "Faixa de idade dos homens")
frequencia_relativa_da_idade_dos_homens <- as.data.frame(prop.table(table(idade_de_homens$age)))

#Recupera arquivo da OMS
recuperarArquivo <- function(){
  url <- "https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide.xlsx"
  
  filename = trimws(paste("Downloads/COVID-19-geographic-disbtribution-worldwide",
                          format(Sys.time(), "%Y-%m-%d"), ".xlsx", sep = ""))
  GET(url, authenticate(":", ":", type="ntlm"), write_disk(filename, overwrite = TRUE), progress())
  return(filename)
}
library(readxl) 
library(httr)
require("maps")
filename <- recuperarArquivo()
covid_19 <- read_excel(filename) %>% mutate(dia = as.Date(paste(year, month, day, sep = "-")))

#desenha grafico com maiores casos por paises
paises_com_10_maiores_taxas_de_casos <- covid_19 %>%
  group_by(countriesAndTerritories) %>%
  summarise(cases = sum(cases), deaths=sum(deaths)) %>%
  arrange(desc(cases)) %>%
  top_n(10, cases)

casos_no_brazil <- covid_19 %>% 
  group_by(countriesAndTerritories) %>%
  filter(countriesAndTerritories == "Brazil") %>%
  summarise(cases = sum(cases), deaths=sum(deaths))

paises_com_10_maiores_taxas_de_casos<- paises_com_10_maiores_taxas_de_casos %>%
  union(casos_no_brazil) %>% 
  arrange(desc(cases))

covid_19_de_maiores_casos_por_pais <- covid_19 %>%
  group_by(countriesAndTerritories, mes_ano = as.Date(format(dateRep, "%Y-%m-%d")))  %>%
  summarise(cases = sum(cases), deaths=sum(deaths)) %>% 
  filter(countriesAndTerritories %in% paises_com_10_maiores_taxas_de_casos$countriesAndTerritories)

ggplot(arrange(covid_19_de_maiores_casos_por_pais, desc(mes_ano)),
       aes(x=mes_ano, y=cases, group = 1)) +
  geom_col() +
  facet_wrap(vars(countriesAndTerritories)) +
  labs(title = "Países com maiores casos de COVID-19", x="Data", y="Casos")

#maiores mortes por paises
paises_com_10_maiores_taxas_de_morte <- paises_com_maiores_taxas <- covid_19 %>%
  group_by(countriesAndTerritories) %>%
  summarise(cases = sum(cases), deaths=sum(deaths)) %>%
  arrange(desc(cases)) %>%
  top_n(10, deaths)

paises_com_10_maiores_taxas_de_morte<- paises_com_10_maiores_taxas_de_morte %>%
  union(casos_no_brazil) %>% 
  arrange(desc(cases))

covid_19_de_maiores_mortes_por_pais <- covid_19 %>%
  group_by(countriesAndTerritories, mes_ano = as.Date(format(dateRep, "%Y-%m-01"))) %>%
  summarise(cases = sum(cases), deaths=sum(deaths)) %>% 
  filter(countriesAndTerritories %in% paises_com_10_maiores_taxas_de_morte$countriesAndTerritories)
#grafico
ggplot(arrange(covid_19_de_maiores_mortes_por_pais, desc(mes_ano)), mapping = aes(x=mes_ano, y=deaths, group = 1, color= cases)) +
  geom_col() +
  facet_wrap(vars(countriesAndTerritories)) +
  labs(title = "Países com maiores mortes de COVID-19", x="Mes e ano", y="Casos")
 cor(covid_19_de_maiores_mortes_por_pais$cases, covid_19_de_maiores_mortes_por_pais$deaths)

 
summary(covid_19_group)
quantile(covid_19_group$cases)
box
View(covid_19_group)

install.packages("shiny")
library(shiny)
runApp("covid_19")


#y <- covid_19_group$cases + rnorm(1000, 0, 30)
#qqplot(covid_19_group$cases, y)
library(tidyverse)
library(ggmap)
install.packages(c("ggplot2"))
library("ggplot2")
library(dplyr)
#carregar codigo dos paises e suas latitudes

world_data <- map_data("world")
world_data <- as.data.frame(world_data)

region.lab.data <- world_data %>%
  group_by(region) %>%
  summarise(long = mean(long), lat = mean(lat))

casos_e_mortes_por_covid_por_paises <- covid_19 %>%
  group_by(countriesAndTerritories)  %>%
  summarise(cases = sum(cases), deaths=sum(deaths))

casos_e_mortes_por_covid_por_paises <- merge(casos_e_mortes_por_covid_por_paises, region.lab.data, all = TRUE,
        by.x = c("countriesAndTerritories"), by.y = c("region"))

  ggplot(world_data, aes(x = long, y = lat)) +
  geom_polygon(aes( group = group, fill = region))+
  geom_text(hjust = 1, aes(label = ifelse(deaths >0 ,deaths,""), color="red"), data = casos_e_mortes_por_covid_por_paises,
              size = 3, hjust = 0.5)+
  scale_fill_viridis_d()+
  theme_void()+
  theme(legend.position = "none")

  
